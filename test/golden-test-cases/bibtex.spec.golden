#
# spec file for package bibtex
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name bibtex

Name:           %{pkg_name}
Version:        0.1.0.6
Release:        0
Summary:        Parse, format and processing BibTeX files
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-latex-devel
BuildRequires:  ghc-parsec-devel
BuildRequires:  ghc-utility-ht-devel

%description
This package allows parsing, formatting and processing of BibTeX files.
BibTeX files are databases for literature for the natbib package of the LaTeX
typesetting system.

The package contains two examples:

* The first example demonstrates the BibTeX parser by generating a publication
overview from a '.bib' file.

* The second example demonstrates the BibTeX generation by producing a large
'.bib' file from the tar archive that cabal-install downloads to your local
cabal directory.

Both examples will be build as stand-alone executable when running

> cabal install -fbuildExamples bibtex

For the first example see the 'publications' directory of this package.
You can start the program and build an example document by running

> make pubs

Technically the program generates a list of custom '\nocite' commands for the
LaTeX package 'multibib'. You can add the custom bibtex field 'subtype' to
BibTeX entries for more detailed categorization of an entry. See
"publications/publications.bib" for examples.

The second example can be executed using

> make hackbib

The file 'hackage.bib' is written to the 'hackage' subdirectory. The
'hackage-bibtex' program reads an uncompressed tar archive from standard input
and writes the result bibliography file to standard output.

Note that 'hackage.bib' exceeds some limits of standard BibTeX and LaTeX: There
are currently much more than 5000 versions of packages, the maximum my BibTeX
can handle at once. That is, you can use the bibliography file, but you cannot
cite all entries with '\nocite*'. If there are more than 26 uploads by the same
author in a year, the BibTeX style 'alpha' generates identifiers including
curly braces which interacts badly with LaTeX's handling of them. If you reduce
the Bibliography file to 5000 entries and try to generate an overview of all
entries with '\nocite', then 'pdflatex' hits its limits:

> TeX capacity exceeded, sorry [save size=5000].


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
