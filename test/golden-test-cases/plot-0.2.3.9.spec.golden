#
# spec file for package plot
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name plot

Name:           %{pkg_name}
Version:        0.2.3.9
Release:        0
Summary:        A plotting library, exportable as eps/pdf/svg/png or renderable with gtk
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-array-devel
BuildRequires:  ghc-cairo-devel
BuildRequires:  ghc-colour-devel
BuildRequires:  ghc-hmatrix-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-pango-devel
BuildRequires:  ghc-transformers-devel

%description
A package for creating plots, built on top of the Cairo rendering engine.

An ambitious attempt to replace gnuplot.

Monadic actions are used to configure a figure, which is a (rxc) array of
subplots. Each plot displays a graph with optional heading, labels, legend, and
annotations. The annotations themselves may be used to draw diagrams.

A figure is preprocessed in preparation for rendering by the Cairo renderer.
The Cairo library can be used to output the figure to PS, PDF, SVG, and PNG
file formats, or to display the figure in a GTK Drawable context. (see package
'plot-gtk').

The preprocessed figure can be embedded as an arbitrary Cairo render, including
in a diagram created with the diagram package. Conversely, arbitrary Cairo
renders can be embedded in the data region of a 'Figure'.

The data series are type "Data.Packed.Vector" from hmatrix, which, when hmatrix
is compiled with '-fvector', is a synonym for "Data.Vector.Storable" from the
vector package and are thus compatible with packages such as statistics.

The example in Graphics.Rendering.Plot can be viewed at
<http://code.haskell.org/plot/examples/perturbed-sine.png>

.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE
%doc CHANGES README examples

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc CHANGES README examples

%changelog
