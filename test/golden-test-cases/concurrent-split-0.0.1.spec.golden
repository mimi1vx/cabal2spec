#
# spec file for package concurrent-split
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name concurrent-split

Name:           %{pkg_name}
Version:        0.0.1
Release:        0
Summary:        MVars and Channels with distinguished input and output side
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros

%description
MVars and Channels with distinguished input and output side. When threads
communicate via an MVar or a Chan there are often clearly defined roles, which
thread is the sender and which one is receiver. We provide wrappers around the
standard concurrency communication channels that make the distinction clear and
type safe.

For example, if a function has a parameter of type 'TChan.In' then it is sure
that it will only write to that channel. Additionally if the compiler warns
about an unused 'TChan.Out' that was created by 'TChan.new' then you know that
the receiver part of your communication is missing.

This package requires only Haskell 98.

Related packages:

* 'stm-split': transactional communication in 'STM' monad

* 'chan-split': follows the same idea as this package and 'stm-split' but
requires multi-parameter type classes with functional dependencies.

* 'privileged-concurrency':

* 'split-channel':.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
