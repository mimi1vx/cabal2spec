#
# spec file for package random-fu
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name random-fu

Name:           %{pkg_name}
Version:        0.2.7.0
Release:        0
Summary:        Random number generation
Group:          Development/Libraries/Haskell

License:        SUSE-Public-Domain
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-erf-devel
BuildRequires:  ghc-log-domain-devel
BuildRequires:  ghc-math-functions-devel
BuildRequires:  ghc-monad-loops-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-random-shuffle-devel
BuildRequires:  ghc-random-source-devel
BuildRequires:  ghc-rvar-devel
BuildRequires:  ghc-syb-devel
BuildRequires:  ghc-template-haskell-devel
BuildRequires:  ghc-transformers-devel
BuildRequires:  ghc-vector-devel

%description
Random number generation based on modeling random variables in two
complementary ways: first, by the parameters of standard mathematical
distributions and, second, by an abstract type ('RVar') which can be composed
and manipulated monadically and sampled in either monadic or "pure" styles.

The primary purpose of this library is to support defining and sampling a wide
variety of high quality random variables. Quality is prioritized over speed,
but performance is an important goal too.

In my testing, I have found it capable of speed comparable to other Haskell
libraries, but still a fair bit slower than straight C implementations of the
same algorithms.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc changelog.md

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc changelog.md

%changelog
