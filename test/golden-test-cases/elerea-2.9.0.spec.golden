#
# spec file for package elerea
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name elerea

Name:           %{pkg_name}
Version:        2.9.0
Release:        0
Summary:        A minimalistic FRP library
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-transformers-base-devel
BuildRequires:  ghc-transformers-devel

%description
Elerea (Eventless reactivity) is a tiny discrete time FRP implementation
without the notion of event-based switching and sampling, with first-class
signals (time-varying values). Reactivity is provided through various
higher-order constructs that also allow the user to work with arbitrary
time-varying structures containing live signals. Signals have precise and
simple denotational semantics.

Stateful signals can be safely generated at any time through a monadic
interface, while stateless combinators can be used in a purely applicative
style. Elerea signals can be defined recursively, and external input is trivial
to attach. The library comes in two major variants:

* Simple: signals are plain discrete streams isomorphic to functions over
natural numbers;

* Param: adds a globally accessible input signal for convenience;

This is a minimal library that defines only some basic primitives, and you are
advised to install 'elerea-examples' as well to get an idea how to build
non-trivial systems with it. The examples are separated in order to minimise
the dependencies of the core library. The 'dow' package contains a full game
built on top of the simple variant.

The basic idea of the implementation is described in the WFLP 2010 paper
/Efficient and Compositional Higher-Order Streams/
(<http://sgate.emt.bme.hu/documents/patai/publications/PataiWFLP2010.pdf>).

Additional contributions: Takano Akio, Mitsutoshi Aoe.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE
%doc CHANGES

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc CHANGES

%changelog
