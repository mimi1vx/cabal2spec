#
# spec file for package non-empty
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name non-empty

Name:           %{pkg_name}
Version:        0.3
Release:        0
Summary:        List-like structures with static restrictions on the number of elements
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-QuickCheck-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-deepseq-devel
BuildRequires:  ghc-utility-ht-devel

%description
We provide the data type 'NonEmpty' that allows to store a list-like structure
with at least or exactly 'n' elements, where 'n' is fixed in the type in a kind
of Peano encoding and is usually small. The datatype is intended to increase
safety by making functions total that are partial on plain lists. E.g.
on a non-empty list, 'head' and 'tail' are always defined.

There are more such data types like 'Optional' and 'Empty'. Together with
'NonEmpty' you can define a list type for every finite set of admissible list
lengths.

The datatype can be combined with Lists, Sequences and Sets (from the
'containers' package).

The package needs only Haskell 98.

Similar packages:

* 'semigroups', 'semigroupoids': restricted to lists, minimum number of
elements: 1, provides more type classes tailored to the use of non-empty lists.

* 'NonEmptyList': restricted to lists, minimum number of elements: 1

* 'NonEmpty': restricted to lists, minimum number of elements: 1, designed for
unqualified use of identifiers

* 'Cardinality':'NeverEmptyList'

* 'mono-traversable':'Data.MinLen': allows to specify a minimum number of
elements using type families and works also for monomorphic data structures
like 'ByteString'

* <http://www.haskell.org/haskellwiki/Non-empty_list>

Related packages:

* 'Stream': Lists that contain always infinitely many elements.

* 'fixed-length': Uses the data structure of this package and defines a
closed-world class for fixed-length lists and an according index type.

* 'fixed-list': Uses the same data structure as this package but is intended
for fixing the number of elements in a list. Requires multi-parameter type
classes with functional dependencies.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
