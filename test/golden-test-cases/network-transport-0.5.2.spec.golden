#
# spec file for package network-transport
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name network-transport

Name:           %{pkg_name}
Version:        0.5.2
Release:        0
Summary:        Network abstraction layer
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-binary-devel
BuildRequires:  ghc-bytestring-devel
BuildRequires:  ghc-deepseq-devel
BuildRequires:  ghc-hashable-devel
BuildRequires:  ghc-transformers-devel

%description
"Network.Transport" is a Network Abstraction Layer which provides the following
high-level concepts:

* Nodes in the network are represented by 'EndPoint's. These are heavyweight
stateful objects.

* Each 'EndPoint' has an 'EndPointAddress'.

* Connections can be established from one 'EndPoint' to another using the
'EndPointAddress' of the remote end.

* The 'EndPointAddress' can be serialised and sent over the network, where as
'EndPoint's and connections cannot.

* Connections between 'EndPoint's are unidirectional and lightweight.

* Outgoing messages are sent via a 'Connection' object that represents the
sending end of the connection.

* Incoming messages for /all/ of the incoming connections on an 'EndPoint' are
collected via a shared receive queue.

* In addition to incoming messages, 'EndPoint's are notified of other 'Event's
such as new connections or broken connections.

This design was heavily influenced by the design of the Common Communication
Interface
(<http://www.olcf.ornl.gov/center-projects/common-communication-interface>).
Important design goals are:

* Connections should be lightweight: it should be no problem to create
thousands of connections between endpoints.

* Error handling is explicit: every function declares as part of its type which
errors it can return (no exceptions are thrown)

* Error handling is "abstract": errors that originate from implementation
specific problems (such as "no more sockets" in the TCP implementation) get
mapped to generic errors ("insufficient resources") at the Transport level.

This package provides the generic interface only; you will probably also want
to install at least one transport implementation (network-transport-*).


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE
%doc ChangeLog

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc ChangeLog

%changelog
