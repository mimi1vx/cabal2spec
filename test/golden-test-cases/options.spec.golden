#
# spec file for package options
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name options

%bcond_with tests

Name:           %{pkg_name}
Version:        1.2.1.1
Release:        0
Summary:        A powerful and easy-to-use command-line option parser
Group:          Development/Libraries/Haskell

License:        MIT
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-monads-tf-devel
BuildRequires:  ghc-transformers-devel
%if %{with tests}
BuildRequires:  ghc-chell-devel
BuildRequires:  ghc-chell-quickcheck-devel
%endif

%description
The 'options' package lets library and application developers easily work with
command-line options.

The following example is a full program that can accept two options,
'--message' and '--quiet':

' import Control.Applicative import Options

data MainOptions = MainOptions &#x20; &#x7b; optMessage :: String &#x20; ,
optQuiet :: Bool &#x20; &#x7d;

instance 'Options' MainOptions where &#x20; defineOptions = pure MainOptions
&#x20; <*> simpleOption "message" "Hello world!" &#x20; "A message to show the
user." &#x20; <*> simpleOption "quiet" False &#x20; "Whether to be quiet."

main :: IO () main = runCommand $ \opts args -> do &#x20; if optQuiet opts
&#x20; then return () &#x20; else putStrLn (optMessage opts) '

>$ ./hello >Hello world! >$ ./hello --message='ciao mondo' >ciao mondo >$
./hello --quiet >$

In addition, this library will automatically create documentation options such
as '--help' and '--help-all':

>$ ./hello --help >Help Options: > -h, --help > Show option summary. >
--help-all > Show all help options. > >Application Options: > --message :: text
> A message to show the user. > default: "Hello world!" > --quiet :: bool >
Whether to be quiet. > default: false.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%check
%cabal_test

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc license.txt

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc license.txt

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
