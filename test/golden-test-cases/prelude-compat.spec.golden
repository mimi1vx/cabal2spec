#
# spec file for package prelude-compat
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name prelude-compat

Name:           %{pkg_name}
Version:        0.0.0.1
Release:        0
Summary:        Provide Prelude and Data.List with fixed content across GHC versions
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros

%description
This package allows you to write warning-free code that compiles with versions
of 'base' before and after AMP and FTP, that is, 'base' before and beginning
with 4.8, respectively, and GHC before and beginning with 7.10, respectively.
It serves three purposes:

* Prevent you from name clashes of FTP-Prelude with locally defined functions
having names like '<*>', 'join', 'foldMap'.

* Prevent you from redundant import warnings if you manually import
"Data.Monoid" or "Control.Applicative".

* Fix list functions to the list type, contrarily to the aim of the FTP.
This way you are saved from 'length (2,1) == 1' and 'maximum (2,1) == 1', until
you import 'Data.Foldable'.

You should add

> import Prelude2010 > import Prelude ()

to your modules. This way, you must change all affected modules. If you want to
avoid this you may try the 'prelude2010' package or if you already import
Prelude explicitly, you may try to add

> Default-Extensions: CPP, NoImplicitPrelude > CPP-Options:
-DPrelude=Prelude2010

to your Cabal file.

In my opinion, this is the wrong way round. The presented Prelude2010 module
should have been the one for GHC-7.10 and the Prelude with added and
generalized list functions should have been an additionally PreludeFTP,
preferably exported by a separate package like all other alternate Prelude
projects. But the purpose of the FTP was to save some import statements at the
expense of blowing up the 'Foldable' class and prevent simple ways to write
code that works with GHC version before and starting with GHC-7.10 and that
does not provoke warnings.

Related packages:

* 'base-compat': The opposite approach - Make future function definitions
available in older GHC versions.

* 'haskell2010': Defines the Prelude for Haskell 2010. Unfortunately,
'haskell2010' is not available anymore since GHC-7.10, because of the AMP.

* 'numeric-prelude': It is intended to provide a refined numeric class
hierarchy but it also provides a non-numeric subset of the Prelude that is more
stable than the one of 'base'.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
