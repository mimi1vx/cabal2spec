#
# spec file for package lift-generics
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name lift-generics

%bcond_with tests

Name:           %{pkg_name}
Version:        0.1.2
Release:        0
Summary:        GHC.Generics-based Language.Haskell.TH.Syntax.lift implementation
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-generic-deriving-devel
BuildRequires:  ghc-template-haskell-devel
%if %{with tests}
BuildRequires:  ghc-base-compat-devel
BuildRequires:  ghc-hspec-devel
%endif

%description
This package provides a "GHC.Generics"-based 'genericLiftWithPkg' function
(intended for GHC 7.10 and earlier), as well as a 'genericLift' function (only
available on GHC 8.0 and later), both of which can be used for providing a
'Language.Haskell.TH.Syntax.lift' implementation. See the documentation in the
"Language.Haskell.TH.Lift.Generics" module to get started.

Credit goes to Matthew Pickering for
<https://ghc.haskell.org/trac/ghc/ticket/1830#comment:12 suggesting this idea>.

Note that due to API limitations, "GHC.Generics" wasn't powerful enough to come
up with the entirety of a `lift` implementation prior to GHC 8.0. For this
reason, 'genericLiftWithPkg' requires you to produce the package name yourself,
which proves to be no small feat (see the documentation for more info).

Luckily, you don't have to jump through as many hoops on GHC 8.0 and later:
simply use the 'genericLift' function, and life is good.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%check
%cabal_test

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE
%doc CHANGELOG.md README.md

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc CHANGELOG.md README.md

%changelog
