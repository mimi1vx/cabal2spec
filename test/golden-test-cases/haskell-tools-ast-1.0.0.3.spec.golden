#
# spec file for package haskell-tools-ast
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name haskell-tools-ast

Name:           %{pkg_name}
Version:        1.0.0.3
Release:        0
Summary:        Haskell AST for efficient tooling
Group:          Development/Libraries/Haskell

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-ghc-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-references-devel
BuildRequires:  ghc-template-haskell-devel
BuildRequires:  ghc-uniplate-devel

%description
A representation of a Haskell Syntax tree that contain source-related and
semantic annotations. These annotations help developer tools to work with the
defined program. The source information enables refactoring and program
transformation tools to change the source code without losing the original
format (layout, comments) of the source. Semantic information helps analyzing
the program. The representation is different from the GHC's syntax tree.
It contains information from all representations in GHC (different version of
syntax trees, lexical and module-level information). The module is split up to
put the representation of different language elements into different modules.
Additionally, it contains the representation of semantic and source
annotations, helper functions and generated instances for the representation of
language elements. Because langauge elements may refer each other (there can be
a pattern inside an expression in case of a pattern match and an expression
inside a pattern if view patterns are enabled), we use hs-boot files to break
up dependency cycles.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)

%changelog
