#
# spec file for package exceptional
#
# Copyright (c) 2018 SUSE LINUX GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

%global pkg_name exceptional

Name:           %{pkg_name}
Version:        0.3.0.0
Release:        0
Summary:        Essentially the Maybe type with error messages
Group:          Development/Libraries/Haskell

License:        BSD-2-Clause
Url:            https://hackage.haskell.org/package/%{name}
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz

BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-exceptions-devel

%description
This is a very simple type:

> data Exceptional x > = Failure String > | Success x

It's much like 'Maybe', except instead of 'Nothing', we have 'Failure String'.

A comparison could also be made to 'Either String'. I made this library because
I was dissatisfied with the 'Monad' instance for 'Either'. In this type, 'fail
= Failure'. It's rather simple.

Changes

[0.3.0.0] Fix erroneous behavior in 'foldExceptional' function added in version
0.2. This release actually does break (or rather fix) the 'foldExceptional'
function, so be careful.

[0.2.0.0] Add 'exceptional' function to encapsulate ordinary exceptions in the
'Exceptional' monad. Add folding functions.

This release does not actually break the API, however I was rather tired when I
chose the version number. This should be 0.1.6.

[0.1.5.0] Add 'exceptIO' function to encapsulate IO errors in the 'Exceptional'
monad.

[0.1.4.3] Fix bug where 'exceptional' won't compile on 'base < 4.8'.
Also move the changelog back to the description so it's more visible.

[0.1.4.2] Moved change log to a separate file so Hackage displays it correctly.

[0.1.4.1] Documentation enhancements/fixes.

[0.1.4.0] Added 'fromMaybe' and 'toMaybe' functions, and a link to the bug
tracker.

[0.1.3.0] Fixed a typo. 0.1.2.0 won't build. Also added definition of 'empty'
for 'Alternative'.

[0.1.2.0] Added 'fromEither' and 'toEither' functions.

[0.1.1.3] Hackage is terrible. Yet another formatting fix.

[0.1.1.2] Yet another formatting fix.

[0.1.1.1] Formatting fix to the haddock documentation.

[0.1.1.0] Add 'runExceptional' function.

[0.1.0.1] Minor documentation changes. No changes to the API.

[0.1.0.0] Initial version.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Group:          System/Libraries

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Group:          Development/Libraries/Haskell
Requires:       ghc-compiler = %{ghc_version}
Requires(post): ghc-compiler = %{ghc_version}
Requires(postun): ghc-compiler = %{ghc_version}
Requires:       ghc-%{name} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%prep
%setup -q

%build
%ghc_lib_build

%install
%ghc_lib_install

%post -n ghc-%{name}-devel
%ghc_pkg_recache

%postun -n ghc-%{name}-devel
%ghc_pkg_recache

%files
%doc LICENSE
%doc README.md

%files -n ghc-%{name} -f ghc-%{name}.files
%defattr(-,root,root,-)
%doc LICENSE

%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files
%defattr(-,root,root,-)
%doc README.md

%changelog
